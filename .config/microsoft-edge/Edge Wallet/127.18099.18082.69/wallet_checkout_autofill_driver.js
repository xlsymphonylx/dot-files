!function(){"use strict";class e{static IsValidDataField(e){return null!=e&&e.length>0&&"null"!==e}static isElementDisabled(t,a){return(a??e.GetFirstVisibleElement(t))?.disabled}static RunQuerySelectorAll(e){const t=e.split("<");let a=document.querySelectorAll(t[0]);for(const e of t.slice(1)){const t=a[0]?.shadowRoot;if(!t)return[];a=t.querySelectorAll(e)}return a}static IsElementVisible(e){return e&&e.offsetWidth>0&&e.offsetHeight>0}static CountVisibleElements(t){if(!e.IsValidDataField(t))return 0;const a=e.RunQuerySelectorAll(t);let l=0;for(const t of a)e.IsElementVisible(t)&&l++;return l}static GetFirstVisibleElement(t){if(!e.IsValidDataField(t))return;const a=t.split(";");for(const t of a)try{const a=e.RunQuerySelectorAll(t);for(const t of a)if(e.IsElementVisible(t))return t}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: GetFirstVisibleElement error",e)}}static Sleep(e){return new Promise((t=>setTimeout(t,e)))}static async WaitForCondition(t,a,l){const o=(new Date).getTime();for(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: waiting");!await t()&&o+a>(new Date).getTime();)await e.Sleep(l??100);return window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: wait completed."),await t()}static async IsFieldVisible(t){return e.CountVisibleElements(t)>0}}class t{static Click(t,a,l){const o=a??e.GetFirstVisibleElement(t);return!!o&&(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click element visible",o,o.innerText),e.isElementDisabled(void 0,o)||function(e){const t=["mousedown","click","mouseup"];if(l){let a=!1;t.forEach((t=>e.addEventListener(t,(()=>{a||(a=!0,l())}))))}t.forEach((t=>e.dispatchEvent(new MouseEvent(t,{bubbles:!0,buttons:1,cancelable:!0,view:window}))))}(o),!0)}static SetBoxValue(t,a){const l=document.createEvent("Events");l.initEvent("change",!0,!1);const o=document.createEvent("Events");o.initEvent("input",!0,!1);const i=new KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,view:window}),n=e.GetFirstVisibleElement(t);return n?(n.blur(),n.dispatchEvent(l),n.focus(),n.setAttribute("value",a),n.value=a,n.dispatchEvent(i),n.dispatchEvent(o),n.dispatchEvent(l),n.blur(),!0):(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: input box undefined"),!1)}}var a,l;function o(e,t,a){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: SendAutofillCompleteMessage",e,t,a),t?(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: iframe postMessage to parent",e,a),parent.postMessage({type:l.WalletCheckoutAutofillDriverCompleteMessage,payload:e},a)):window.WalletCheckoutScriptAutofillRuntime.postMessageToHost("AutofillComplete",e)}async function i(a){const{Name:l,Selector:o,Type:i,ValueList:n,WaitBefore:s,SecondarySelector:d}=a;"button"==i&&0==n?.length||await e.Sleep(s||0);const c=await e.IsFieldVisible(o);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSelectorVisible",l,c),!c)throw new Error("Selector not found");if("input"===i&&n?.[0]){const a=e.GetFirstVisibleElement(o);window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: targetElement",l,a);const i=a.tagName;if("INPUT"===i)t.SetBoxValue(o,n?.[0]);else if("SELECT"===i){const e=a.getElementsByTagName("option"),i=n.map((e=>e.toLowerCase()));window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: lowerValueList",l,i);for(const a of e){const e=a?.attributes?.getNamedItem("value").value?.trim();if(i.includes(e?.toLowerCase()))return t.SetBoxValue(o,e),void(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: shouldValue",l,e))}window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: shouldValue not match",l)}}else if("button"===i)if(d){const a=await e.IsFieldVisible(d);window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSecondarySelectorVisible",l,a),a||(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click",o),t.Click(o))}else window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click",o),t.Click(o),e.GetFirstVisibleElement(o).scrollIntoView()}function n(e,t){const a=new RegExp(`(?<![a-zA-Z0-9])${e}(?![a-zA-Z])`,"i");return t?.match(a)}function s(e,l,o){for(const i of e){const e=(i?.innerText||i?.innerHTML)?.toUpperCase()?.trim();let s=!1;if(o===a.ExactMatch){if(s=l.some((t=>t===e)),!s){const e=i?.getAttributeNames(),t=e.map((e=>i?.getAttribute(e)?.toUpperCase()?.trim()));s=l.some((e=>t.includes(e)))}}else s=l.some((t=>n(t,e)));if(s)return t.Click(void 0,i),!0}return!1}function d(t,l,o){const i=e.RunQuerySelectorAll(l),n=o?.map((e=>e.toUpperCase()));let d=s(i,n,a.ExactMatch);return window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: after ExactMatch, canMatch",t,d),d||(d=s(i,n,a.RegMatch),window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: after RegMatch, canRegMatch",t,d)),d}async function c(a){const{Name:l,WaitForVisible:o,ArrowDownSelector:i,SecondarySelector:n,SecondaryType:s}=a;let{ValueList:c}=a;if("expiryMonth"==l&&(c=function(e){if(e.length<1)return e;const t=new Map;return t.set("01",["01","1","January","Jan"]),t.set("02",["02","2","February","Feb"]),t.set("03",["03","3","March","Mar"]),t.set("04",["04","4","April","Apr"]),t.set("05",["05","5","May"]),t.set("06",["06","6","June","Jun"]),t.set("07",["07","7","July","Jul"]),t.set("08",["08","8","August","Aug"]),t.set("09",["09","9","September","Sep"]),t.set("10",["10","October","Oct"]),t.set("11",["11","November","Nov"]),t.set("12",["12","December","Dec"]),t.get(e[0])||e}(c),window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: expiryMonth ValueList",c)),n){const a=await e.WaitForCondition((async()=>await e.IsFieldVisible(n)),o||0);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isSecondarySelectorVisible",l,a),!a)throw new Error("Secondary selector not found");if("option"===s){let a=!1;if(i)for(;!a&&!e.isElementDisabled(i);)window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: click ArrowDownSelector",i),t.Click(i,void 0,(()=>{a=d(l,n,c)}));else a=d(l,n,c);if(window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: canMatch final result",l,a),!a)throw new Error("Secondary selector of option cannot match ValueList")}else"button"===s&&t.Click(n)}}!function(e){e[e.ExactMatch=0]="ExactMatch",e[e.RegMatch=1]="RegMatch"}(a||(a={})),function(e){e.WalletCheckoutAutofillDriverCompleteMessage="WalletCheckoutAutofillDriverCompleteMessage"}(l||(l={})),window.WalletCheckoutScriptAutofillRuntime=new class{initialize(e){return window.loadTimeData={data_:{isDebugEnabled:!0}},window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: initialize, params: ",e),e.splice(0,2),window.ExecuteInitialize(e),!0}raiseMessageFromHost(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: raiseMessageFromHost",e);if("WalletCheckoutScriptAutofill"===e.shift())try{"interactive"===document.readyState||"complete"===document.readyState?window.ExecuteAutofill(e):window.addEventListener?.("DOMContentLoaded",(()=>{window.ExecuteAutofill(e)}))}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: raiseMessageFromHost error",e)}}postMessageToHost(e,t){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost",e,t);try{walletCheckoutAutofillNativeHandler&&walletCheckoutAutofillNativeHandler.sendMessageToHost(e,t)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost error",e)}}},window.ExecuteInitialize=async function(t){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteInitialize",t);const a=t?.[1],i=JSON.parse(a??"{}"),{IsDebugEnabled:n}=i;window.loadTimeData={data_:{isDebugEnabled:n}};const s=t?.[2],d=JSON.parse(s??"{}");window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: primaryMainFrameData",d);const{ShouldListenToIframeMessage:c}=d;let r=!1;function u(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: receive message from iframe, event: ",e);const{type:t,payload:a}=e.data;if(t===l.WalletCheckoutAutofillDriverCompleteMessage){r=!0,window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: receive WalletCheckoutAutofillDriverComplete message from iframe, payload: ",a);try{o(a)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: postMessageToHost error",e)}}}c&&(window.addEventListener("message",u),await e.WaitForCondition((async()=>r),1e4),window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: isIframeResponseReturned",r),window.removeEventListener("message",u))},window.ExecuteAutofill=async function(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteAutofill",e);const t=e?.[0],a=JSON.parse(t??"{}"),{CheckoutElements:l=[]}=a,n=e?.[3],s=JSON.parse(n??"{}");window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: iframeData",s);const{IsIframeElement:d,ParentOrigin:r}=s;try{let e=!0;const t=[];for(const a of l){const{Name:l,Selector:o,SecondarySelector:n}=a;if(o)try{await i(a)}catch(a){e=!1,t.push({failedField:l,failureReason:a.message});continue}if(n)try{await c(a)}catch(a){e=!1,t.push({failedField:l,failureReason:a.message})}}o([JSON.stringify({isSuccess:e,failureDetails:t?.length>0?t:null})],d,r)}catch(e){window.loadTimeData.data_.isDebugEnabled&&console.log("XPay wallet debugging: ExecuteAutofill error",e),o([JSON.stringify({isSuccess:!1,failureDetails:null})],d,r)}}}();